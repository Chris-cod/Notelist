{"ast":null,"code":"var _jsxFileName = \"/home/christian/Github/ynotes/src/pages/NotePage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react'; //import notes from '../assets/data'\n\nimport { useParams, Link } from \"react-router-dom\";\nimport { ReactComponent as Arrowleft } from '../assets/arrow-left.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NotePage = () => {\n  _s();\n\n  const params = useParams();\n  let noteId = params.id; //let note = notes.find(note => note.id === Number(noteId))\n\n  let [note, setNote] = useState(null);\n  useEffect(() => {\n    getNote();\n  }, []);\n\n  let getNote = async () => {\n    let response = await fetch(`http://localhost:8000/notes/${noteId}`);\n    let data = await response.json();\n    setNote(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"note\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: /*#__PURE__*/_jsxDEV(Arrowleft, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: note === null || note === void 0 ? void 0 : note.body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NotePage, \"GyecKfmZuiEQj7DMlhNIJEsUGEg=\", false, function () {\n  return [useParams];\n});\n\n_c = NotePage;\nexport default NotePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"NotePage\");","map":{"version":3,"sources":["/home/christian/Github/ynotes/src/pages/NotePage.js"],"names":["React","useEffect","useState","useParams","Link","ReactComponent","Arrowleft","NotePage","params","noteId","id","note","setNote","getNote","response","fetch","data","json","body"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC,C,CACA;;AACA,SAAQC,SAAR,EAAmBC,IAAnB,QAA8B,kBAA9B;AACA,SAAQC,cAAc,IAAIC,SAA1B,QAA0C,0BAA1C;;;AAIA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACnB,QAAMC,MAAM,GAAGL,SAAS,EAAxB;AACA,MAAIM,MAAM,GAAGD,MAAM,CAACE,EAApB,CAFmB,CAInB;;AACA,MAAI,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,IAAD,CAA9B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AAEZY,IAAAA,OAAO;AAEV,GAJQ,EAIN,EAJM,CAAT;;AAOA,MAAIA,OAAO,GAAG,YAAY;AACtB,QAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAE,+BAA8BN,MAAO,EAAvC,CAA1B;AACA,QAAIO,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAjB;AACAL,IAAAA,OAAO,CAACI,IAAD,CAAP;AACH,GAJD;;AAOA,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,6BACI;AAAA,+BACI,QAAC,IAAD;AAAM,UAAA,EAAE,EAAE,GAAV;AAAA,iCACI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAQI;AAAU,MAAA,KAAK,EAAEL,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEO;AAAvB;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CAnCD;;GAAMX,Q;UACaJ,S;;;KADbI,Q;AAqCN,eAAeA,QAAf","sourcesContent":["import React, {useEffect, useState} from 'react'\n//import notes from '../assets/data'\nimport {useParams, Link} from \"react-router-dom\"\nimport {ReactComponent as Arrowleft} from '../assets/arrow-left.svg'\n\n\n\nconst NotePage = () => {\n    const params = useParams()\n    let noteId = params.id\n\n    //let note = notes.find(note => note.id === Number(noteId))\n    let [note, setNote] = useState(null)\n\n    useEffect(() => {\n\n        getNote()\n        \n    }, [])\n\n\n    let getNote = async () => {\n        let response = await fetch(`http://localhost:8000/notes/${noteId}`)\n        let data = await response.json()\n        setNote(data) \n    }\n\n\n    return (\n        <div className=\"note\">\n            <div className=\"note-header\">\n                <h3>\n                    <Link to= \"/\" >\n                        <Arrowleft />\n                    </Link>\n                </h3>\n            </div>\n            <textarea value={note?.body}>\n\n            </textarea>\n        </div>\n    )\n}\n\nexport default NotePage\n"]},"metadata":{},"sourceType":"module"}
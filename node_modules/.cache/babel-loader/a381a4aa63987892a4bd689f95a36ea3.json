{"ast":null,"code":"import _objectSpread from\"/home/christian/Github/ynotes/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _asyncToGenerator from\"/home/christian/Github/ynotes/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/home/christian/Github/ynotes/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/home/christian/Github/ynotes/node_modules/@babel/runtime/regenerator/index.js\";import React,{useEffect,useState}from'react';//import notes from '../assets/data'\nimport{useParams,Link}from\"react-router-dom\";import{ReactComponent as Arrowleft}from'../assets/arrow-left.svg';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var NotePage=function NotePage(_ref){var history=_ref.history;var params=useParams();var noteId=params.id;//let note = notes.find(note => note.id === Number(noteId))\nvar _useState=useState(null),_useState2=_slicedToArray(_useState,2),note=_useState2[0],setNote=_useState2[1];useEffect(function(){var getNote=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(noteId==='new')){_context.next=2;break;}return _context.abrupt(\"return\");case 2:_context.next=4;return fetch(\"http://localhost:8000/notes/\".concat(noteId));case 4:response=_context.sent;_context.next=7;return response.json();case 7:data=_context.sent;setNote(data);case 9:case\"end\":return _context.stop();}}},_callee);}));return function getNote(){return _ref2.apply(this,arguments);};}();getNote();},[noteId]);var createNote=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return fetch(\"http://localhost:8000/notes/\",{method:'POST',headers:{'content-type':'application/json'},body:JSON.stringify(_objectSpread(_objectSpread({},note),{},{'updated':new Date()}))});case 2:case\"end\":return _context2.stop();}}},_callee2);}));return function createNote(){return _ref3.apply(this,arguments);};}();var updateNote=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return fetch(\"http://localhost:8000/notes/\".concat(noteId),{method:'PUT',headers:{'content-type':'application/json'},body:JSON.stringify(_objectSpread(_objectSpread({},note),{},{'updated':new Date()}))});case 2:case\"end\":return _context3.stop();}}},_callee3);}));return function updateNote(){return _ref4.apply(this,arguments);};}();var deleteNote=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(){return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return fetch(\"http://localhost:8000/notes/\".concat(noteId),{method:'DELETE',headers:{'content-type':'application/json'},body:JSON.stringify(note)});case 2:history.push('/');case 3:case\"end\":return _context4.stop();}}},_callee4);}));return function deleteNote(){return _ref5.apply(this,arguments);};}();var handleSubmit=function handleSubmit(){if(noteId!=='new'&&!note.body){deleteNote();}else if(noteId!=='new'){updateNote();}else if(noteId==='new'&&note!==null){createNote();}history.push('/');};return/*#__PURE__*/_jsxs(\"div\",{className:\"note\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"note-header\",children:[/*#__PURE__*/_jsx(\"h3\",{children:/*#__PURE__*/_jsx(Link,{to:\"/\",children:/*#__PURE__*/_jsx(Arrowleft,{onClick:handleSubmit})})}),noteId!=='new'?/*#__PURE__*/_jsx(\"button\",{onClick:deleteNote,children:\"Delete\"}):/*#__PURE__*/_jsx(\"button\",{onClick:handleSubmit,children:\"Done\"})]}),/*#__PURE__*/_jsx(\"textarea\",{onChange:function onChange(e){setNote(_objectSpread(_objectSpread({},note),{},{'body':e.target.value}));},value:note===null||note===void 0?void 0:note.body})]});};export default NotePage;","map":{"version":3,"sources":["/home/christian/Github/ynotes/src/pages/NotePage.js"],"names":["React","useEffect","useState","useParams","Link","ReactComponent","Arrowleft","NotePage","history","params","noteId","id","note","setNote","getNote","fetch","response","json","data","createNote","method","headers","body","JSON","stringify","Date","updateNote","deleteNote","push","handleSubmit","e","target","value"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\n//import notes from '../assets/data'\nimport {useParams,Link} from \"react-router-dom\"\nimport {ReactComponent as Arrowleft} from '../assets/arrow-left.svg'\n\n\n\nconst NotePage = ({history}) => {\n    let params = useParams()\n    let noteId = params.id\n\n    //let note = notes.find(note => note.id === Number(noteId))\n    let [note, setNote] = useState(null)\n\n    useEffect(() => {\n        let getNote = async () => {\n            if(noteId === 'new') return\n            let response = await fetch(`http://localhost:8000/notes/${noteId}`)\n            let data = await response.json()\n            setNote(data) \n        }\n        getNote()  \n    }, [noteId])\n\n    let createNote = async () => {\n        await fetch(`http://localhost:8000/notes/`, {\n            method: 'POST',\n            headers: {\n                'content-type': 'application/json'\n            },\n            body: JSON.stringify({...note, 'updated': new Date() })\n        })\n    }\n\n    let updateNote = async () => {\n        await fetch(`http://localhost:8000/notes/${noteId}`, {\n            method: 'PUT',\n            headers: {\n                'content-type': 'application/json'\n            },\n            body: JSON.stringify({...note, 'updated': new Date() })\n        })\n    }\n\n    let deleteNote = async () => {\n        await fetch(`http://localhost:8000/notes/${noteId}`, {\n            method: 'DELETE',\n            headers: {\n                'content-type': 'application/json'\n            },\n            body: JSON.stringify(note)\n        })\n        history.push('/')\n    }\n    \n    let handleSubmit = () => {\n        if(noteId !== 'new' && !note.body){\n            deleteNote()\n        }else if(noteId !== 'new'){\n            updateNote()\n        }else if(noteId === 'new' && note !== null){\n            createNote()\n        }\n        history.push('/')\n    }\n        \n\n    return (\n        <div className=\"note\">\n            <div className=\"note-header\">\n                <h3>\n                    <Link to= \"/\" >\n                        <Arrowleft onClick={handleSubmit} />\n                    </Link>\n                </h3>\n                {noteId !== 'new' ? (\n                    <button onClick={deleteNote}>Delete</button>\n                ) : (\n                    <button onClick={handleSubmit}>Done</button>\n                )}\n                \n            </div>\n            <textarea onChange = {(e) => {setNote({...note, 'body':e.target.value})}} value={note?.body}>\n\n            </textarea>\n        </div>\n    )\n}\n\nexport default NotePage\n"]},"metadata":{},"sourceType":"module"}